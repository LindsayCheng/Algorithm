#encoding:utf-8


def quiksort(numlist):
    """
    是一个分治算法,采用分治策略.
    在原地排序.节省内存.
    实用,微调后可以改变运行时间,提高效率.
    1 分解问题,选主数据把数组分成若干份
    2 选主数据把数组分为两部分,左边数据都小于主数据,右边都大于等于主数据
    3 用递归对子数组进行排序.
    4 合并
    平均时间是最好的.nlgn
    最差情况:n的2次方:已排好序的情况下,两个子数组其中一个一直为空,树的高度为n,节点为c(n)
    所以为了逃离最坏情况:1 随记排列输入数组;
                      2 随记选取主数据(更推荐) ----->随机化快速排序算法. 算法效率和输入数组无关.
                        不需要对输入做假设;
                        没有一种输入会引发最坏的运行效率
                        最坏运行效率仅仅与随机数生成器有关.----->(指示器随机变量)
                        随机化快速排序算法比归并排序快上4倍.而且时间复杂度为nlgn.
    :param numlist:
    :return:
    """
    #TODO 待完成
